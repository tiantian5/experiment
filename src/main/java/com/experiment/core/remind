代码规范：
• 易读性最高优先级
      业务逻辑梳理的很清晰，主逻辑不超过10步，然后每个分支逻辑都不超过10步，这样把整体业务逻辑拆分进行拆分，方法配上注释，让人快速看懂。  注释写的少的人没有责任心
      一个类中行数不能超过30行。
• 一致性必须考虑
      自己的db，redis，外部的dubbo服务，mq，这些都是属于不同的存储，每一步都可能失败，需要考虑整体业务的一致性怎么解决，分布式的问题都来自于网络，你拿到的失败不一定真正的失败
• 异常的处理
      主流程中会被拆分为多个子方法，请考虑每一个子方法会发生哪些异常，每个异常需要怎么处理，是需要catch进行降级处理，还是忽视，让他向上层进行抛
• 幂等
     什么是幂等，举个例子，A系统调用B系统接口收藏商品，A系统可能因为网络原因没有拿到B系统的结果响应，其实B系统已经存储了用户的商品收藏记录。  那边A系统进行再次调用B系统时候，B系统需要返回收藏成功。    作为调用方和服务提供者，都需要考虑自己的业务场景是否需要幂等
• 性能要考虑
     性能是必须要考虑的，结合自己的业务考虑未来2年的情况
• 分页接口
      http请求，一定要有个字段hasNextPage。 是否有下一页，需要根据这个字段来控制
      dubbo接口，也要加个字段告诉调用方是否还有下一页